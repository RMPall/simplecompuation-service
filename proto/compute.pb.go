// Code generated by protoc-gen-go. DO NOT EDIT.
// source: compute.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The Input message contains a slice of inputs
type Input struct {
	Num                  []int64  `protobuf:"varint,1,rep,packed,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Input) Reset()         { *m = Input{} }
func (m *Input) String() string { return proto.CompactTextString(m) }
func (*Input) ProtoMessage()    {}
func (*Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a04c0385a1d134f, []int{0}
}

func (m *Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Input.Unmarshal(m, b)
}
func (m *Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Input.Marshal(b, m, deterministic)
}
func (m *Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Input.Merge(m, src)
}
func (m *Input) XXX_Size() int {
	return xxx_messageInfo_Input.Size(m)
}
func (m *Input) XXX_DiscardUnknown() {
	xxx_messageInfo_Input.DiscardUnknown(m)
}

var xxx_messageInfo_Input proto.InternalMessageInfo

func (m *Input) GetNum() []int64 {
	if m != nil {
		return m.Num
	}
	return nil
}

// The result contains the computed result
type Result struct {
	Total                int64    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a04c0385a1d134f, []int{1}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

// The error response contains status, code and message of the error
type ErrorResponse struct {
	Status               int64    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Code                 int64    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorResponse) Reset()         { *m = ErrorResponse{} }
func (m *ErrorResponse) String() string { return proto.CompactTextString(m) }
func (*ErrorResponse) ProtoMessage()    {}
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a04c0385a1d134f, []int{2}
}

func (m *ErrorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorResponse.Unmarshal(m, b)
}
func (m *ErrorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorResponse.Marshal(b, m, deterministic)
}
func (m *ErrorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorResponse.Merge(m, src)
}
func (m *ErrorResponse) XXX_Size() int {
	return xxx_messageInfo_ErrorResponse.Size(m)
}
func (m *ErrorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorResponse proto.InternalMessageInfo

func (m *ErrorResponse) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ErrorResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ErrorResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// Empty message placeholder for options
type Option struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Option) Reset()         { *m = Option{} }
func (m *Option) String() string { return proto.CompactTextString(m) }
func (*Option) ProtoMessage()    {}
func (*Option) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a04c0385a1d134f, []int{3}
}

func (m *Option) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Option.Unmarshal(m, b)
}
func (m *Option) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Option.Marshal(b, m, deterministic)
}
func (m *Option) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Option.Merge(m, src)
}
func (m *Option) XXX_Size() int {
	return xxx_messageInfo_Option.Size(m)
}
func (m *Option) XXX_DiscardUnknown() {
	xxx_messageInfo_Option.DiscardUnknown(m)
}

var xxx_messageInfo_Option proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Input)(nil), "compute.Input")
	proto.RegisterType((*Result)(nil), "compute.Result")
	proto.RegisterType((*ErrorResponse)(nil), "compute.ErrorResponse")
	proto.RegisterType((*Option)(nil), "compute.Option")
}

func init() { proto.RegisterFile("compute.proto", fileDescriptor_7a04c0385a1d134f) }

var fileDescriptor_7a04c0385a1d134f = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0xb7, 0xc6, 0x6d, 0x75, 0x60, 0x55, 0x06, 0x59, 0xe2, 0x1e, 0xa4, 0xe4, 0xd4, 0xd3,
	0x2a, 0xfa, 0x04, 0x22, 0x22, 0x9e, 0x84, 0x80, 0x0f, 0x50, 0xb7, 0x83, 0x08, 0x6d, 0x27, 0x74,
	0x26, 0xef, 0x2f, 0x26, 0xdd, 0x8a, 0xb7, 0xff, 0xfb, 0xf9, 0x09, 0x5f, 0x06, 0x36, 0x07, 0x1e,
	0x42, 0x54, 0xda, 0x87, 0x89, 0x95, 0xb1, 0x9a, 0xd1, 0xdd, 0xc0, 0xfa, 0x6d, 0x0c, 0x51, 0xf1,
	0x0a, 0xcc, 0x18, 0x07, 0x5b, 0xd4, 0xa6, 0x31, 0xfe, 0x37, 0xba, 0x5b, 0x28, 0x3d, 0x49, 0xec,
	0x15, 0xaf, 0x61, 0xad, 0xac, 0x6d, 0x6f, 0x8b, 0xba, 0x68, 0x8c, 0xcf, 0xe0, 0x3e, 0x60, 0xf3,
	0x32, 0x4d, 0x3c, 0x79, 0x92, 0xc0, 0xa3, 0x10, 0x6e, 0xa1, 0x14, 0x6d, 0x35, 0xca, 0xbc, 0x9b,
	0x09, 0x11, 0x4e, 0x0f, 0xdc, 0x91, 0x3d, 0x49, 0x6d, 0xca, 0x68, 0xa1, 0x1a, 0x48, 0xa4, 0xfd,
	0x22, 0x6b, 0xea, 0xa2, 0x39, 0xf7, 0x47, 0x74, 0x67, 0x50, 0xbe, 0x07, 0xfd, 0xe6, 0xf1, 0xa1,
	0x87, 0xea, 0x39, 0x6b, 0xe2, 0x1d, 0x98, 0xa7, 0xae, 0xc3, 0x8b, 0xfd, 0xf1, 0x1b, 0x49, 0x7a,
	0xb7, 0x5d, 0xf8, 0x9f, 0x89, 0x5b, 0xe1, 0x3d, 0xc0, 0x2b, 0x69, 0xf6, 0x17, 0xbc, 0x5c, 0x76,
	0xf9, 0xe9, 0xdd, 0x5f, 0x91, 0x27, 0x6e, 0xf5, 0x59, 0xa6, 0xcb, 0x3c, 0xfe, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x25, 0x7b, 0xc6, 0xef, 0x2a, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ComputeClient is the client API for Compute service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ComputeClient interface {
	// Add set of inputs
	Add(ctx context.Context, in *Input, opts ...grpc.CallOption) (*ErrorResponse, error)
	// Retrieve results
	GetResults(ctx context.Context, in *Option, opts ...grpc.CallOption) (*Result, error)
}

type computeClient struct {
	cc *grpc.ClientConn
}

func NewComputeClient(cc *grpc.ClientConn) ComputeClient {
	return &computeClient{cc}
}

func (c *computeClient) Add(ctx context.Context, in *Input, opts ...grpc.CallOption) (*ErrorResponse, error) {
	out := new(ErrorResponse)
	err := c.cc.Invoke(ctx, "/compute.Compute/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *computeClient) GetResults(ctx context.Context, in *Option, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/compute.Compute/GetResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ComputeServer is the server API for Compute service.
type ComputeServer interface {
	// Add set of inputs
	Add(context.Context, *Input) (*ErrorResponse, error)
	// Retrieve results
	GetResults(context.Context, *Option) (*Result, error)
}

// UnimplementedComputeServer can be embedded to have forward compatible implementations.
type UnimplementedComputeServer struct {
}

func (*UnimplementedComputeServer) Add(ctx context.Context, req *Input) (*ErrorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedComputeServer) GetResults(ctx context.Context, req *Option) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResults not implemented")
}

func RegisterComputeServer(s *grpc.Server, srv ComputeServer) {
	s.RegisterService(&_Compute_serviceDesc, srv)
}

func _Compute_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Input)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputeServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/compute.Compute/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputeServer).Add(ctx, req.(*Input))
	}
	return interceptor(ctx, in, info, handler)
}

func _Compute_GetResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Option)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputeServer).GetResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/compute.Compute/GetResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputeServer).GetResults(ctx, req.(*Option))
	}
	return interceptor(ctx, in, info, handler)
}

var _Compute_serviceDesc = grpc.ServiceDesc{
	ServiceName: "compute.Compute",
	HandlerType: (*ComputeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Compute_Add_Handler,
		},
		{
			MethodName: "GetResults",
			Handler:    _Compute_GetResults_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "compute.proto",
}
